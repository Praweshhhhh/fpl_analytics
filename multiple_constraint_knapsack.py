import time
# code for the extended
# Knapsack Approach

def maxProfit(profit, weight, n, max_W, max_E):
	# To store the dp values we use 3d-table
	# dp = [[[0]*(max_E+1)]*(max_W+1)]*(n+1)
	dp = [[[0] * (max_E+1) for _ in range(max_W+1)] for _ in range(n+1)]
	# for each element given
	for i in range(1,n+1):
		# For each possible weight value
		# print("i:",i)
		for j in range(1, max_W+1 ):
			# For each case where the total elements are
			# less than the constraint
			# print("j:",j)
			for k in range(1, max_E+1):
				# To ensure that we dont go out of the array
				if j >= weight[i-1]:
					# print("k:",k)
					dp[i][j][k] = max(dp[i - 1][j][k],dp[i - 1][j - weight[i - 1]][k - 1]+ profit[i - 1])
				else:
					# print("k:",k)
					dp[i][j][k] = dp[i - 1][j][k]

	return dp[n][max_W][max_E]


# Driver Code
n = 63

# top 63 players
weight = [62,44,61,47,49,49,53,51,53,55,52,52,53,55,46,62,51,55,53,48,61,47,52,50,55,46,65,65,70,77,60,73,74,56,58,60,75,59,97,86,89,85,120,121,125,106,61,60,57,51,116,62,64,99,73,93,110,82,73,80,76,109,97]
profit = [122,126, 133,135,137,137,143,143,153,156,160,170,123,123,123,123,124,127,128,128,130,133,142,142,143,144,167,178,181,210,123,125,127,130,133,137,139,149,169,175,177,200,204,221,233,251,126,129,131,132,132,136,139,146,153,155,158,165,168,194,198,205,210]

# all 666 players
# weight = [51, 52, 52, 45, 48, 50, 50, 43, 45, 44, 109, 92, 43, 48, 69, 67, 51, 47, 42, 41, 57, 44, 43, 52, 48, 89, 53, 47, 42, 53, 47, 43, 44, 44, 40, 40, 40, 41, 42, 42, 44, 54, 43, 57, 59, 52, 52, 48, 45, 42, 44, 57, 43, 44, 43, 54, 43, 44, 43, 43, 43, 52, 43, 42, 44, 45, 42, 51, 53, 45, 50, 48, 42, 43, 43, 43, 44, 42, 39, 74, 61, 51, 43, 42, 42, 42, 68, 61, 58, 46, 50, 47, 48, 48, 43, 49, 58, 44, 57, 45, 45, 44, 48, 43, 43, 43, 42, 48, 43, 54, 52, 47, 47, 39, 62, 58, 54, 53, 50, 48, 46, 42, 44, 58, 45, 44, 57, 47, 42, 40, 44, 39, 41, 54, 40, 49, 55, 42, 44, 43, 43, 39, 61, 62, 51, 52, 42, 59, 60, 55, 55, 54, 55, 49, 46, 43, 57, 43, 45, 39, 40, 48, 40, 40, 45, 40, 45, 45, 61, 59, 61, 54, 48, 42, 67, 54, 48, 73, 68, 59, 51, 56, 49, 50, 43, 74, 53, 47, 73, 66, 52, 60, 49, 42, 41, 39, 45, 45, 45, 56, 49, 50, 43, 43, 41, 57, 43, 49, 42, 66, 67, 56, 52, 54, 52, 48, 43, 42, 51, 43, 45, 45, 40, 39, 40, 45, 45, 45, 45, 40, 45, 56, 59, 53, 52, 53, 49, 57, 61, 52, 39, 82, 73, 64, 62, 53, 50, 50, 44, 53, 52, 42, 42, 42, 63, 48, 50, 44, 45, 45, 40, 40, 40, 45, 62, 54, 53, 42, 49, 41, 97, 57, 55, 42, 42, 73, 58, 51, 51, 50, 50, 43, 42, 43, 42, 60, 48, 47, 61, 42, 52, 39, 40, 45, 40, 70, 77, 65, 53, 52, 53, 93, 51, 62, 45, 125, 121, 61, 63, 57, 58, 54, 52, 54, 53, 45, 42, 40, 42, 44, 45, 45, 40, 39, 58, 39, 63, 57, 55, 52, 53, 48, 50, 116, 99, 61, 47, 120, 106, 91, 86, 76, 75, 55, 51, 51, 46, 53, 51, 45, 40, 40, 45, 45, 55, 53, 52, 54, 53, 54, 48, 47, 49, 49, 47, 85, 89, 48, 53, 46, 47, 83, 85, 68, 63, 61, 57, 51, 47, 47, 48, 48, 42, 43, 44, 38, 90, 59, 45, 53, 50, 44, 46, 43, 43, 43, 42, 43, 51, 50, 51, 43, 39, 58, 53, 47, 49, 50, 44, 53, 55, 43, 47, 43, 48, 52, 43, 54, 45, 50, 40, 45, 39, 40, 47, 53, 45, 43, 44, 42, 44, 44, 40, 64, 52, 46, 41, 62, 60, 53, 50, 48, 45, 43, 44, 43, 53, 50, 44, 43, 39, 45, 44, 40, 39, 44, 44, 45, 40, 45, 43, 52, 42, 45, 50, 47, 39, 46, 52, 43, 52, 47, 47, 54, 46, 43, 50, 41, 49, 45, 52, 47, 55, 44, 43, 44, 45, 40, 47, 47, 45, 45, 48, 46, 44, 44, 41, 39, 60, 76, 49, 46, 45, 42, 45, 42, 62, 57, 52, 52, 46, 48, 44, 44, 43, 44, 53, 52, 42, 55, 42, 44, 40, 45, 45, 40, 45, 45, 45, 53, 52, 53, 53, 55, 48, 51, 110, 45, 53, 41, 97, 86, 83, 70, 57, 52, 47, 48, 48, 44, 42, 58, 43, 73, 54, 50, 40, 42, 40, 39, 46, 69, 45, 40, 46, 43, 43, 41, 42, 41, 40, 39, 39, 62, 61, 55, 47, 49, 42, 54, 56, 53, 48, 47, 48, 44, 43, 48, 58, 43, 59, 39, 44, 48, 46, 45, 45, 45, 41, 41, 44, 43, 43, 39, 40, 70, 60, 43, 49, 71, 66, 61, 52, 50, 46, 47, 49, 43, 43, 60, 45, 44, 68, 56, 39, 44, 40, 40, 40, 45, 39, 48, 64, 45, 45, 65, 55, 51, 49, 41, 47, 39, 80, 60, 53, 42, 39, 52, 53, 47, 56, 48, 49, 44, 46, 54, 49, 45, 45, 45, 45, 40, 39, 45, 49, 45]
# profit = [43, 44, 55, 41, 57, 10, 0, 0, 0, 16, 205, 118, 25, 114, 53, 4, 73, 46, 0, 48, 94, 33, 42, 57, 61, 106, 30, 41, 39, 42, 71, 4, 0, 8, 0, 0, 0, 39, 0, 22, 34, 5, 15, 83, 149, 93, 84, 0, 0, 25, 12, 17, 59, 6, 80, 67, 1, 90, 65, 42, 62, 98, 90, 0, 43, 4, 41, 29, 2, 0, 52, 79, 3, 27, 16, 49, 11, 84, 4, 116, 99, 69, 4, 0, 0, 1, 73, 21, 42, 2, 40, 6, 54, 65, 39, 68, 24, 126, 91, 0, 0, 0, 44, 62, 21, 0, 3, 128, 0, 36, 3, 5, 135, 0, 76, 28, 0, 0, 39, 78, 38, 0, 63, 104, 86, 88, 131, 80, 61, 0, 33, 9, 26, 12, 0, 110, 143, 48, 78, 84, 21, 0, 61, 136, 39, 170, 0, 30, 123, 32, 0, 67, 118, 70, 15, 77, 100, 0, 0, 0, 0, 21, 0, 0, 1, 0, 0, 0, 100, 63, 130, 19, 34, 0, 68, 90, 13, 168, 32, 12, 53, 61, 92, 57, 0, 127, 68, 62, 153, 28, 0, 137, 61, 48, 9, 0, 1, 1, 0, 109, 48, 11, 77, 51, 64, 42, 15, 137, 7, 120, 81, 48, 23, 51, 92, 85, 0, 41, 132, 70, 1, 22, 0, 0, 4, 2, 0, 0, 0, 0, 0, 52, 120, 78, 90, 55, 14, 24, 126, 117, 0, 165, 95, 72, 63, 59, 0, 0, 18, 24, 39, 0, 71, 0, 53, 4, 74, 0, 17, 3, 0, 0, 11, 0, 123, 114, 128, 26, 120, 19, 210, 64, 156, 0, 0, 125, 133, 0, 38, 44, 85, 1, 0, 11, 35, 129, 32, 35, 117, 0, 54, 0, 15, 2, 0, 181, 210, 178, 93, 39, 18, 155, 65, 122, 0, 233, 221, 76, 15, 27, 52, 77, 116, 107, 49, 0, 0, 27, 0, 0, 2, 13, 14, 0, 11, 0, 63, 114, 74, 49, 34, 82, 0, 132, 146, 133, 11, 204, 251, 1, 175, 116, 139, 69, 55, 65, 11, 92, 45, 38, 0, 0, 0, 1, 127, 123, 0, 24, 116, 67, 3, 9, 4, 0, 2, 0, 177, 103, 143, 0, 0, 51, 200, 0, 32, 38, 95, 50, 2, 60, 55, 74, 3, 1, 7, 51, 117, 11, 7, 74, 55, 26, 102, 44, 65, 24, 73, 49, 9, 0, 143, 0, 0, 109, 37, 4, 105, 44, 73, 47, 78, 0, 0, 64, 0, 92, 37, 34, 27, 58, 0, 0, 1, 0, 19, 19, 0, 9, 38, 66, 35, 48, 23, 139, 13, 109, 11, 29, 94, 52, 32, 77, 111, 16, 67, 28, 26, 3, 1, 32, 0, 18, 13, 0, 1, 24, 19, 5, 1, 0, 84, 142, 2, 111, 142, 133, 0, 144, 57, 0, 0, 101, 98, 65, 123, 3, 13, 6, 33, 1, 160, 19, 86, 0, 9, 2, 1, 14, 40, 5, 0, 51, 75, 18, 84, 85, 10, 0, 0, 198, 45, 62, 0, 0, 104, 29, 107, 117, 0, 98, 0, 75, 0, 0, 51, 32, 78, 40, 0, 34, 9, 0, 0, 24, 1, 2, 0, 0, 0, 41, 62, 97, 64, 0, 3, 124, 158, 0, 98, 58, 169, 48, 117, 100, 65, 52, 1, 69, 36, 0, 7, 45, 2, 54, 9, 1, 0, 0, 0, 17, 7, 43, 0, 0, 21, 73, 66, 26, 54, 77, 36, 0, 1, 109, 88, 39, 4, 137, 0, 113, 60, 62, 33, 0, 78, 36, 4, 61, 39, 0, 107, 1, 0, 3, 6, 0, 79, 81, 26, 10, 74, 76, 40, 0, 6, 0, 9, 0, 83, 111, 66, 50, 70, 87, 8, 105, 105, 7, 0, 93, 0, 18, 102, 9, 20, 2, 0, 8, 0, 0, 3, 41, 44, 0, 0, 167, 123, 118, 97, 32, 103, 5, 194, 105, 153, 0, 0, 97, 113, 11, 130, 0, 0, 100, 1, 23, 57, 0, 0, 0, 0, 0, 0, 1, 25, 0]
max_weight = 850
max_element = 11

	# dp = vector<vector<vector<int> > >(n + 1, vector<vector<int> >(max_weight + 1,vector<int>(max_element + 1, 0)));
start = time.time()
print(maxProfit(profit, weight, n, max_weight,max_element))
end = time.time()
print("Time taken:", end-start)
